import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, MessageHandler, filters
from openai import OpenAI

# ‚Äî‚Äî‚Äî –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ ‚Äî‚Äî‚Äî
load_dotenv()
TELEGRAM_TOKEN    = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY    = os.getenv("OPENAI_API_KEY")
RENDER_URL        = os.getenv("RENDER_EXTERNAL_URL")
PORT              = int(os.getenv("PORT", 10000))

# ‚Äî‚Äî‚Äî –ö–ª–∏–µ–Ω—Ç—ã ‚Äî‚Äî‚Äî
client = OpenAI(api_key=OPENAI_API_KEY)

# ‚Äî‚Äî‚Äî –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –ø–∞–º—è—Ç—å—é ‚Äî‚Äî‚Äî
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id   = update.effective_user.id
    app_data  = context.application.user_data
    history   = app_data.setdefault(user_id, {"history": []})["history"]

    user_text = update.message.text
    history.append({"role": "user", "content": user_text})

    # –°—Ç—Ä–æ–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    messages = [{"role": "system", "content":
                 "–¢—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏. –ü–æ–º–æ–≥–∏ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è: —É—Ç–æ—á–Ω–∏ —É—Å–ª—É–≥—É, –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è."}]
    messages += history

    try:
        resp  = client.chat.completions.create(model="gpt-4o", messages=messages)
        reply = resp.choices[0].message.content
        history.append({"role": "assistant", "content": reply})
        # –û—Å—Ç–∞–≤–ª—è–µ–º –≤ –ø–∞–º—è—Ç–∏ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
        app_data[user_id]["history"] = history[-10:]
        await update.message.reply_text(reply)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ OpenAI:", e)
        await update.message.reply_text("–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ –Ω–∞ Render.")

# ‚Äî‚Äî‚Äî –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ‚Äî‚Äî‚Äî
def main():
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç —á–µ—Ä–µ–∑ Webhook‚Ä¶")
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ü—É—Ç—å –∏ URL –≤–µ–±—Ö—É–∫–∞
    webhook_path = "webhook"  # ‚Üê –±–µ–∑ –≤–µ–¥—É—â–µ–≥–æ —Å–ª—ç—à–∞
    webhook_url  = f"{RENDER_URL}/{webhook_path}"
    print("üîó Webhook URL:", webhook_url)

    # –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π Tornado-—Å–µ—Ä–≤–µ—Ä –∏–∑ extra-webhooks
    app.run_webhook(
        listen     ="0.0.0.0",
        port       =PORT,
        url_path   =webhook_path,
        webhook_url=webhook_url
    )

if __name__ == "__main__":
    main()

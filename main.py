import os
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    MessageHandler,
    filters,
)
from openai import OpenAI

# 1) –ó–∞–≥—Ä—É–∑–∫–∞ .env (–µ—Å–ª–∏ —Ç—ã –ø—É—à–∏—à—å .env.example, –∞ –Ω–∞—Å—Ç–æ—è—â–∏–µ –∫–ª—é—á–∏ –¥–µ—Ä–∂–∏—à—å –≤ Dashboard)
load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
RENDER_URL = os.getenv("RENDER_EXTERNAL_URL")
PORT = int(os.getenv("PORT", 10000))

if not TELEGRAM_TOKEN or not OPENAI_API_KEY:
    raise RuntimeError("–ù–µ –∑–∞–¥–∞–Ω TELEGRAM_TOKEN –∏–ª–∏ OPENAI_API_KEY")

# 2) –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OpenAI-–∫–ª–∏–µ–Ω—Ç
client = OpenAI(api_key=OPENAI_API_KEY)

# 3) –û–±—Ä–∞–±–æ—Ç—á–∏–∫ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ context.user_data["history"]
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    history = context.user_data.get("history", [])
    history.append({"role": "user", "content": update.message.text})

    messages = [
        {"role": "system", "content": (
            "–¢—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–ª–∏–Ω–∏–∫–∏. –ü–æ–º–æ–≥–∏ —á–µ–ª–æ–≤–µ–∫—É –∑–∞–ø–∏—Å–∞—Ç—å—Å—è: "
            "—É—Ç–æ—á–Ω–∏ —É—Å–ª—É–≥—É, –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è. –í–µ–¥–∏ —Å–µ–±—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ."
        )}
    ] + history

    try:
        resp = client.chat.completions.create(
            model="gpt-4o",
            messages=messages
        )
        reply = resp.choices[0].message.content
        history.append({"role": "assistant", "content": reply})
        # —Ö—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10
        context.user_data["history"] = history[-10:]
        await update.message.reply_text(reply)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ handle_message:", e)
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏.")

# 4) –ó–∞–ø—É—Å–∫ Webhook-—Å–µ—Ä–≤–µ—Ä–∞ (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –±–µ–∑ asyncio.run)
def main():
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞ —á–µ—Ä–µ–∑ Webhook‚Ä¶")

    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    webhook_url = f"{RENDER_URL}/webhook"
    print("üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook:", webhook_url)
    app.bot.set_webhook(webhook_url)

    # —Å—é–¥–∞ Render –Ω–∞–ø—Ä–∞–≤–∏—Ç –≤—Å–µ POST /webhook
    app.run_webhook(
        listen="0.0.0.0",
        port=PORT,
    )

if __name__ == "__main__":
    main()
